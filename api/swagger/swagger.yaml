swagger: "2.0"
info:
  version: "1.0.0"
  title: Alarm Management API
# basePath prefixes all resource paths 
basePath: /api
tags:
  - name: Admin
    description: Administration fonctions
  - name: User
    description: User management functions
  - name: Application
    description: Application management functions
  - name: Image
    description: Image management functions
  - name: Sensor
    description: Sensor management functions
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    x-swagger-router-controller: users
    post:
      tags:
        - Admin
      description: Create a new user
      operationId: createUser
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: user
          in: body
          description: The user to create
          required: true
          schema:
            $ref: "#/definitions/UserCreate"
      responses:
        "201":
          description: Created
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Admin
      description: Return the list of users
      operationId: listUsers
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Users"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/me:
    x-swagger-router-controller: users
    get:
      tags:
        - User
      description: Retreive the user information of the user currently login
      operationId: getUserMe
      parameters:
        - name: session
          in: header
          description: THe user session
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - User
      description: Update the user currently login
      operationId: updateUserMe
      parameters:
        - name: session
          in: header
          description: The user session
          required: true
          type: string
        - name: user
          in: body
          description: The new user data
          required: true
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{userid}:
    x-swagger-router-controller: users
    get:
      tags:
        - Admin
      description: Retreive the user information
      operationId: getUser
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: userid
          in: path
          description: The Id of the user
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Admin
      description: Update the given user
      operationId: updateUser
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: userid
          in: path
          description: The Id of the user
          required: true
          type: string
        - name: user
          in: body
          description: The new user data
          required: true
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Admin
      description: Delete the given user
      operationId: deleteUser
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: userid
          in: path
          description: The Id of the user
          required: true
          type: string
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
####################################################################################
# Session Management API

  /session:
    x-swagger-router-controller: session
    post:
      tags:
        - User
      description: Signin
      operationId: signin
      parameters:
        - name: user
          in: body
          description: The user to credential
          required: true
          schema:
            $ref: "#/definitions/UserCreate"
      responses:
        "200":
          description: OK
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Session"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - User
      description: Signout
      operationId: signout
      parameters:
        - name: session
          in: header
          description: The session of the connected user
          required: true
          type: string
      responses:
        "200":
          description: OK
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

#####################################################################################
# Application Management API

  /applications:
    x-swagger-router-controller: application
    post:
      tags:
        - Application
        - Admin
      description: Create a new application
      operationId: createapp
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: app
          in: body
          description: The application to create
          required: true
          schema:
            $ref: "#/definitions/ApplicationCreate"
      responses:
        "201":
          description: Created
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Application"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Application
      description: List existing application (a valid session or AdminKey as to be provided)
      operationId: listapp
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: false
          type: string
        - name: session
          in: header
          description: The user session
          required: false
          type: string
      responses:
        "200":
          description: OK
          schema:
            # a pointer to a definition
            $ref: "#/definitions/StringArray"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /applications/{applicationid}:
    x-swagger-router-controller: application
    get:
      tags:
        - Application
        - Admin
      description: Detail of an application
      operationId: getapp
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: applicationid
          in: path
          description: The application id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Application"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Application
        - Admin
      description: Update an application
      operationId: updateapp
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: applicationid
          in: path
          description: The application id
          required: true
          type: string
        - name: app
          in: body
          description: The application to create
          required: true
          schema:
            $ref: "#/definitions/Application"
      responses:
        "200":
          description: OK
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Application"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Application
        - Admin
      description: delete an application
      operationId: deleteapp
      parameters:
        - name: AdminKey
          in: header
          description: The admin key
          required: true
          type: string
        - name: applicationid
          in: path
          description: The application id
          required: true
          type: string
      responses:
        "204":
          description: OK
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

#####################################################################################
# Sensors Management API
  /applications/{applicationid}/sensors:
    x-swagger-router-controller: sensors
    get:
      tags:
        - Sensor
      description: Return the list of sensors
      operationId: listsensors
      parameters:
        - name: session
          in: header
          description: The user session
          required: true
          type: string
        - name: applicationid
          in: path
          description: The application id
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SensorsList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /applications/{applicationid}/sensors/{sensor}:
    x-swagger-router-controller: sensors
    get:
      tags:
        - Sensor
      description: Return the data for the given sensor
      operationId: getsensordata
      parameters:
        - name: session
          in: header
          description: The user session
          required: true
          type: string
        - name: applicationid
          in: path
          description: The application id
          required: true
          type: string
        - name: sensor
          in: path
          description: The sensor
          required: true
          type: string
        - name: limit
          description: The limit of element returned (default 100) 
          in: query
          required: false
          type: integer
        - name: offset
          description: Return the offset element first 
          in: query
          required: false
          type: integer
        - name: order
          description: Order the query 
          in: query
          required: false
          type: string
          enum: [asc, dsc]

      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SensorListData"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /applications/{applicationid}/sensors/{sensor}/groupby/{groupby}:
    x-swagger-router-controller: sensors
    get:
      tags:
        - Sensor
      description: Compute the average data for the given sensor, group by the given element
      operationId: groupsensordata
      parameters:
        - name: session
          in: header
          description: The user session
          required: true
          type: string
        - name: applicationid
          in: path
          description: The application id
          required: true
          type: string
        - name: sensor
          in: path
          description: The sensor
          required: true
          type: string
        - name: groupby
          in: path
          description: The sensor
          required: true
          type: string
          enum: [year, month, day, hours]
        - name: year
          description: Restrict the operation to the given year 
          in: query
          required: false
          type: integer
        - name: month
          description: Restrict the operation to the given month 
          in: query
          required: false
          type: integer
        - name: day
          description: Restrict the operation to the given day 
          in: query
          required: false
          type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/SensorGroupbyList"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
###################################################################################
# Sensors
  SensorGroupbyData:
    properties:
      id:
        type: integer
      value:
        type: [string, integer, number]
  SensorGroupbyList:
    type: array
    items:
      $ref: "#/definitions/SensorGroupbyData"
  SensorListData:
    properties:
      count:
        type: integer
      offset:
        type: integer
      data:
        type: array
        items:
          $ref: "#/definitions/SensorData"
  SensorData:
    properties:
      date:
        type: string
        format: date-time
      value:
        type: [string, integer, number]
  SensorsList:
    type: array
    items:
      type: string
###################################################################################
# Session
  Session:
    properties:
      session: 
        type: string

###################################################################################
# Users
  Users:
    type: array
    items:
      $ref: "#/definitions/User"
  User:
    properties:
      login:
        type: string
        pattern: ^[0-9a-zA-Z_]*$
  UserCreate:
    required:
      - login
      - password
    allOf:
      - $ref: "#/definitions/User"
      - properties:
          password:
            type: string
            format: password
  UserUpdate:
    required:
      - password
    properties:
      password:
        type: string
        format: password
###################################################################################
# Application
  Application:
    properties:
      id:
        type: string
      name:
        type: string
      imagesbank:
        $ref: "#/definitions/WebService"
      sensorsbank:
        $ref: "#/definitions/WebService"
      alarm:
        $ref: "#/definitions/WebService"
  ApplicationCreate:
    required:
      - name
      - imagesbank
      - sensorsbank
      - alarm
    allOf:
      - $ref: "#/definitions/Application"
  WebService:
    properties:
      apikey:
        type: string
      url:
        type: string
  StringArray:
    type: array
    items:
      type: string
  ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string

